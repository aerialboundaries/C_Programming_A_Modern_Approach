:close
:e ex3-5.txt

Suppose that we call scanf as follows:

scanf("%d%f%d", &i, &x, &j);

If the user enters

10.3 5 6

what will be the valudes of i, x, and j after the call? (Assume that i and j are int variables and x is a float variable.)

My Answer: i = 10, x = 5.0, j = 6

---------
Geminiによる解答

あなたの回答は間違いです。scanf が入力を読み取る際の最初の変換指定子（%d）が、どこで読み取りを停止するかによって、変数の値が変わってきます。

この呼び出し後の i、 x、 j の正しい値は以下の通りです。

i=10
x=0.3
j=5
🔍 ステップバイステップの解説
入力文字列は 10.3 5 6 で、フォーマット文字列は "%d%f%d" です。

1. 最初の整数（%d for i）の読み取り
scanf は整数（%d）を i に読み込もうとします。

1、次に 0 を読み取ります。

次の文字が小数点（.）であることを検出します。これは整数の有効な文字ではないため、読み取りを停止します。

結果: i には 10 が代入されます。

残りの入力ストリーム: .3 5 6（小数点から読み取りが再開されます）。

2. 浮動小数点数（%f for x）の読み取り
scanf は浮動小数点数（%f）を x に読み込もうとします。

%f は、先頭にある任意の空白を自動的にスキップしますが、このケースでは先頭は小数点（.）です。

.、次に 3 を読み取ります。

次の文字がスペース（ ）であることを検出します。これは浮動小数点数の有効な文字ではないため、読み取りを停止します。

結果: x には 0.3 が代入されます（読み取りが小数点から始まったため、0. が補完されます）。

残りの入力ストリーム:  5 6（スペースから読み取りが再開されます）。

3. 2番目の整数（%d for j）の読み取り
scanf は整数（%d）を j に読み込もうとします。

%d は先頭の空白を自動的にスキップします。

5 を読み取ります。

次の文字がスペースであることを検出した時点で、読み取りを停止します。

結果: j には 5 が代入されます。

残りの入力ストリーム:  6（6 の前のスペースが残ります）。

したがって、入力ストリームにはまだ 6 が残っていますが、最後の %d の変換は 5 で完了しているため、6 はどの変数にも代入されません。
